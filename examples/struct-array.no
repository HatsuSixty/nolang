include "std.no"

const User.name sizeof(ptr) increment end
const User.age  sizeof(int) increment end
const sizeof(User)              reset end

const USER_CAP 100 end
memory users    sizeof(User) USER_CAP * end
memory users_sz             sizeof(int) end
0 users_sz !64

func userdump
  0 while dup users_sz @64 < do
    let index in
      users index sizeof(User) * + User.name + @64
      users index sizeof(User) * + User.age  + @64
      let name age in
        "User:\n" puts
        "    Name: "  puts name cstr-to-str puts  "\n" puts
        "    Age:  "  puts age              print "\n" puts
      end
      index
    end
    1 +
  end
done

func adduser // users name age
  let user name age in
    name user users_sz @64 sizeof(User) * + User.name + !64
    age  user users_sz @64 sizeof(User) * + User.age  + !64
  end
  users_sz inc64
done

users "Jeff"c     69 adduser
users "Someone"c  30 adduser
users "Somebody"c 15 adduser
users "Nobody"c    0 adduser

userdump
